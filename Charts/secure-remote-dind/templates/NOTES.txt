1. Get the application URL by running these commands:

    # Access the docker daemon:

{{- if contains "NodePort" .Values.service.type }}

    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "secureremotedind.fullname" . }})
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

    export DOCKER_HOST=tcp://localhost:${NODE_PORT}

{{- else if contains "LoadBalancer" .Values.service.type }}

    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "secureremotedind.fullname" . }}'

    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "secureremotedind.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")

    export DOCKER_HOST=tcp://localhost:2376

{{- else if contains "ClusterIP" .Values.service.type }}

    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "secureremotedind.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
    export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
    
    echo "Forward Port 2376"
    kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 2376:$CONTAINER_PORT

    echo "Configure your Docker CLI to use tcp://127.0.0.1:2376"
    export DOCKER_HOST=tcp://127.0.0.1:2376

{{- end }}

2. Get the application URL by running these commands:

    mkdir -p ${HOME}/certs/ca

    kubectl get secret --namespace {{ .Release.Namespace }} \
      {{ include "secureremotedind.fullname" . }}-docker-ca-secret \
      -o jsonpath="{.data.tls\.key}" | base64 --decode \
      > ${CURRENT_DIR}/certs/ca/key.pem

    kubectl get secret --namespace {{ .Release.Namespace }} \
      {{ include "secureremotedind.fullname" . }}-docker-ca-secret \
      -o jsonpath="{.data.ca\.crt}" | base64 --decode \
      > ${CURRENT_DIR}/certs/ca/ca.pem

    cp ${HOME}/certs/ca/ca.pem ${HOME}/certs/ca/cert.pem

    export DOCKER_TLS_VERIFY=1
    export DOCKER_CERT_PATH=${HOME}/certs/ca

    docker info

